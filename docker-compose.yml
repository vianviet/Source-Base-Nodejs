version: "3"

services:
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/:/etc/nginx/conf.d
    command: "/bin/sh -c 'while :; do sleep 12h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    ports:
      - '80:80'
    networks:
      - webappnetwork
    links:
      - api:api
    depends_on:
      - client
      - api

  client:
    build:
      context: .
      dockerfile: ./client/Dockerfile
    image: client/react:v1
    # volumes:
    #   - ./client:/client
    ports:
      - '3000:3000'
    restart: unless-stopped
    networks:
      - webappnetwork

  api:
    image: naskio/strapi
    container_name: api
    restart: unless-stopped
    env_file: .env
    environment:
      PUBLIC_URL : ${PUBLIC_URL}
      NODE_ENV : ${API_NODE_ENV}
      APP_KEYS : ${APP_KEYS}
      API_TOKEN_SALT : ${API_TOKEN_SALT}
      ADMIN_JWT_SECRET : ${ADMIN_JWT_SECRET}
      JWT_SECRET : ${JWT_SECRET}
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: ${DATABASE_NAME}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - ./app:/srv/app
    ports:
      - "1337:1337"
    networks:
      - webappnetwork
    depends_on:
      - db

  db:
    image: postgres:13
    container_name: strapi_v4_db
    restart: unless-stopped
    environment:
      POSTGRES_DB : ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - ./data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - webappnetwork

networks:
    webappnetwork:
        driver: bridge

volumes:
  data:

